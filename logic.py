import os   
from openai import OpenAI
from config  import *
import sqlite3


prompt = """1. üßë‚Äçüíª **–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç**: –ü–∏—à–∏ –∫–æ–¥ –∏ —Å–æ–∑–¥–∞–≤–∞–π –ø—Ä–æ–≥—Ä–∞–º–º—ã, –Ω–µ –≤—ã—Ö–æ–¥—è –∏–∑ –¥–æ–º–∞.

2. üìä **–ê–Ω–∞–ª–∏—Ç–∏–∫ –¥–∞–Ω–Ω—ã—Ö**: –ò—Å—Å–ª–µ–¥—É–π –¥–∞–Ω–Ω—ã–µ –∏ –ø–æ–ª—É—á–∞–π –∏–Ω—Å–∞–π—Ç—ã, —Ä–∞–±–æ—Ç–∞—è –∑–∞ —Å–≤–æ–∏–º –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–º.

3. üñ• **–ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –¥–∏–∑–∞–π–Ω–µ—Ä**: –°–æ–∑–¥–∞–≤–∞–π –≤–ø–µ—á–∞—Ç–ª—è—é—â–∏–µ –≤–∏–∑—É–∞–ª—å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è, –Ω–µ –ø–æ–∫–∏–¥–∞—è —É–¥–æ–±–Ω–æ–≥–æ –¥–æ–º–∞—à–Ω–µ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞.

4. üåê **–í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫**: –°—Ç—Ä–æ–π —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –≤–µ–±-—Å–∞–π—Ç—ã –∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –æ—Å—Ç–∞–≤–∞—è—Å—å –≤ —É—é—Ç–µ —Å–≤–æ–µ–≥–æ –¥–æ–º–∞.

5. üîç **–¢–µ—Å—Ç–∏—Ä–æ–≤—â–∏–∫ –ü–û**: –ü—Ä–æ–≤–µ—Ä—è–π –∫–∞—á–µ—Å—Ç–≤–æ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –∏ –≤—ã—è–≤–ª—è–π –±–∞–≥–∏, —Ä–∞–±–æ—Ç–∞—è —É–¥–∞–ª–µ–Ω–Ω–æ."""



class Profeson:

    def __init__(self ):
        self.client = OpenAI(
            api_key= SamKey,  # This is the default and can be omitted
        )
    
    def Ai_start(self,text):
        question = text
        chat_completion = self.client.chat.completions.create(
    messages=[
        {
            "role": "user",
            "content": "–ü—Ä–∏—à–ª–∏ 5 –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ –ø–æ —ç—Ç–∏–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º: " + question + " –≠—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—à—å, –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º, —Å—Ç–∏–ª–∏–∑—É–π –∏—Ö, –Ω–æ –Ω–µ –¥–æ–±–∞–≤–ª—è–π –Ω–∏—á–µ–≥–æ –ª–∏—à–Ω–µ–≥–æ. –ù–µ –ø–∏—à–∏ –ª–∏—à–Ω–∏—Ö –∫–æ–º–∞–Ω–¥ —á–µ—Ä–µ–∑ / –∏ —Ç.–¥. –î–µ–ª–∞–π –∫–∞–∫ —Ç—É—Ç: " + prompt,
        }
    ],
    model="gpt-4o",
)
        return(chat_completion.choices[0].message.content)




def create_tables():
    db = sqlite3.connect(database)
    cur = db.cursor()
    cur.execute("CREATE TABLE IF NOT EXISTS status(id INTEGER PRIMARY KEY, name TEXT, preferences TEXT)")
    db.commit()
    db.close()

def add_info(name , pr):
    db = sqlite3.connect(database)
    with db:
        db.execute('INSERT INTO status(name, preferences) VALUES( ?, ?)' ,(name, pr))
        db.commit()






if __name__ == '__main__':
    pro = create_tables()
    